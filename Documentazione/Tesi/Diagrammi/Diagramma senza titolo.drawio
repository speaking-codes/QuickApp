<mxfile host="app.diagrams.net" modified="2024-05-25T18:53:53.238Z" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36" version="24.4.8" etag="4WMTT81LVolVwnXSup13" type="device" pages="2">
  <diagram id="7J5OeujaD8-_XJBOcY0s" name="Function Update Matrix Users Items">
    <mxGraphModel dx="1171" dy="604" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="ojkn8pxTVRCWGfbj0chC-2" value="Function updateMatrixUsersItems()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;matrixUsersItems = new [int][int]&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;lastUserId = getMaxIserId()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;biasFactor = calculateBiasFactor(lastUserId)&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;customerFeatures = getCustomerFeatures(lastUserId)&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;insurancePolicyCategories = getInsurancePolicyCategories()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;For itemCustomer in customerFeatures&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;customerInsurancePolicies = getInsurancePolicies(itemCustomer.CustomerId)&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;For itemPolicy in insurancePolicyCategories&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; If (customerInsurancePolicies.Contains(itemPolicy.Id)&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; matrixUsersItems[itemCustomer.CustomerId] = 1&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Else&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;prediction = calculatePrediction(itemCustomer.CustomerId, itemPolicy.Id)&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;If (prediction.PredictLabel == itemPolicy.Id)&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; matrixUsersItems[itemCustomer.CustomerId][itemPolicy.Id] = prediction.Score&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Else&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; matrixUsersItems[itemCustomer.CustomerId][itemPolicy.Id] = 0&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; EndFor&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;EndFor&lt;br&gt;&amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; return matrixUsersItems&lt;br&gt;&lt;br&gt;End&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;fontSize=14;fontStyle=1" vertex="1" parent="1">
          <mxGeometry x="80" y="280" width="640" height="500" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram name="Function Update Matrix Users Items Bias" id="E9rG0O7dINwl5h2pnrh9">
    <mxGraphModel dx="1171" dy="604" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="JcHHqzvYcIswx9RLGBjy-0" />
        <mxCell id="JcHHqzvYcIswx9RLGBjy-1" parent="JcHHqzvYcIswx9RLGBjy-0" />
        <mxCell id="JcHHqzvYcIswx9RLGBjy-2" value="Function updateMatrixUsersItems()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;matrixUsersItems = new [int][int]&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;lastUserId = getMaxIserId()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;biasFactor = calculateBiasFactor(lastUserId)&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;customerFeatures = getCustomerFeatures(lastUserId)&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;insurancePolicyCategories = getInsurancePolicyCategories()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;For itemCustomer in customerFeatures&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;customerInsurancePolicies = getInsurancePolicies(itemCustomer.CustomerId)&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;For itemPolicy in insurancePolicyCategories&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; If (customerInsurancePolicies.Contains(itemPolicy.Id)&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; matrixUsersItems[itemCustomer.CustomerId] = (1 * 100) + biasRandom()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Else&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;prediction = calculatePrediction(itemCustomer.CustomerId, itemPolicy.Id)&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;If (prediction.PredictLabel == itemPolicy.Id)&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; matrixUsersItems[itemCustomer.CustomerId][itemPolicy.Id] = (prediction.Score&amp;nbsp;&amp;nbsp;* 100) + biasRandom()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Else&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; matrixUsersItems[itemCustomer.CustomerId][itemPolicy.Id] =&amp;nbsp;&amp;nbsp;biasRandom()&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; EndFor&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;EndFor&lt;br&gt;&amp;nbsp;&lt;br&gt;&amp;nbsp; &amp;nbsp; return matrixUsersItems&lt;br&gt;&lt;br&gt;End&lt;br&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;align=left;verticalAlign=top;whiteSpace=wrap;rounded=0;fontSize=14;fontStyle=1" vertex="1" parent="JcHHqzvYcIswx9RLGBjy-1">
          <mxGeometry x="80" y="280" width="800" height="500" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
