﻿// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.LightGbm;
using Microsoft.ML.Trainers;
using Microsoft.ML.Transforms;
using Microsoft.ML;

namespace DAL
{
    public partial class RegressionPredictionModel
    {
        /// <summary>
        /// Retrains model using the pipeline generated as part of the training process. For more information on how to load data, see aka.ms/loaddata.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <param name="trainData"></param>
        /// <returns></returns>
        public static ITransformer RetrainPipeline(MLContext mlContext, IDataView trainData)
        {
            var pipeline = BuildPipeline(mlContext);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(@"Gender", @"Gender", outputKind: OneHotEncodingEstimator.OutputKind.Indicator)      
                                    .Append(mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"CustomerId", @"CustomerId"),new InputOutputColumnPair(@"Age", @"Age"),new InputOutputColumnPair(@"MaritalStatusId", @"MaritalStatusId"),new InputOutputColumnPair(@"FamilyTypeId", @"FamilyTypeId"),new InputOutputColumnPair(@"ChildrenNumbers", @"ChildrenNumbers"),new InputOutputColumnPair(@"IncomeTypeId", @"IncomeTypeId"),new InputOutputColumnPair(@"ProfessionTypeId", @"ProfessionTypeId"),new InputOutputColumnPair(@"Income", @"Income"),new InputOutputColumnPair(@"RegionId", @"RegionId"),new InputOutputColumnPair(@"InsurancePolicyCategoryId", @"InsurancePolicyCategoryId")}))      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"Gender",@"CustomerId",@"Age",@"MaritalStatusId",@"FamilyTypeId",@"ChildrenNumbers",@"IncomeTypeId",@"ProfessionTypeId",@"Income",@"RegionId",@"InsurancePolicyCategoryId"}))      
                                    .Append(mlContext.Regression.Trainers.LightGbm(new LightGbmRegressionTrainer.Options(){NumberOfLeaves=9,NumberOfIterations=4,MinimumExampleCountPerLeaf=22,LearningRate=0.456685041864419,LabelColumnName=@"NormalizedRenewalNumber",FeatureColumnName=@"Features",ExampleWeightColumnName=null,Booster=new GradientBooster.Options(){SubsampleFraction=0.999999776672986,FeatureFraction=0.726508289876741,L1Regularization=1.7903161472974E-09,L2Regularization=0.818695278839977},MaximumBinCountPerFeature=114}));

            return pipeline;
        }
    }
}
